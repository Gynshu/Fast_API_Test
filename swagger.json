{
  "openapi": "3.0.0",
  "info": {
    "title": "Sample Password Flow OAuth2 Project",
    "description": "This is an example of using OAuth2 Password Flow in a specification to describe security to your API.",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://virtserver.swaggerhub.com/Gynshu/Fast_api_test/1.0.0",
      "description": "SwaggerHub API Auto Mocking"
    }
  ],
  "security": [
    {
      "password": [
        "read",
        "write"
      ]
    }
  ],
  "paths": {
    "/live": {
      "get": {
        "summary": "Server check",
        "description": "This operation is used to check if the server is live",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": []
      }
    },
    "/api/auth/register": {
      "post": {
        "summary": "Registration",
        "description": "You can register using (email, password) email should be valid and exist (hunter.co verification integrated)",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the user"
                  },
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "password": {
                    "type": "string",
                    "format": "password"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Name of the user"
                    },
                    "email": {
                      "type": "string",
                      "format": "email"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "id": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Account already exist"
          },
          "400": {
            "description": "Invalid email"
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "summary": "Login",
        "description": "You can login using (email, password) access tokens stored in cookies",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "password": {
                    "type": "string",
                    "format": "password"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "access_token": {
                      "type": "string",
                      "description": "JWT token"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials"
          },
          "400": {
            "description": "Invalid email"
          }
        }
      }
    },
    "/api/auth/logout": {
      "get": {
        "summary": "Logout",
        "description": "After logout cookies will be deleted",
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/refresh": {
      "get": {
        "summary": "Refresh token",
        "description": "After refresh cookies will be updated",
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "access_token": {
                      "type": "string",
                      "description": "JWT token"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/posts/create_post": {
      "post": {
        "summary": "Create post",
        "description": "Create post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "Title of the post"
                  },
                  "body": {
                    "type": "string",
                    "description": "Body of the post"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "description": "Title of the post"
                    },
                    "body": {
                      "type": "string",
                      "description": "Body of the post"
                    },
                    "likes": {
                      "type": "array",
                      "format": "email"
                    },
                    "dislikes": {
                      "type": "array",
                      "format": "email"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "user": {
                      "type": "string",
                      "format": "email"
                    },
                    "id": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials"
          },
          "400": {
            "description": "Invalid email"
          }
        }
      }
    },
    "/api/posts/get_by_id": {
      "post": {
        "summary": "Get post by id",
        "description": "Get post by id",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int64"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "description": "Title of the post"
                    },
                    "body": {
                      "type": "string",
                      "description": "Body of the post"
                    },
                    "likes": {
                      "type": "array",
                      "format": "email"
                    },
                    "dislikes": {
                      "type": "array",
                      "format": "email"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "user": {
                      "type": "string",
                      "format": "email"
                    },
                    "id": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Post not found"
          },
          "400": {
            "description": "Invalid post id"
          }
        }
      }
    },
    "/api/posts/edit": {
      "post": {
        "summary": "Edit post",
        "description": "Edit post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "title": {
                    "type": "string",
                    "description": "Title of the post"
                  },
                  "body": {
                    "type": "string",
                    "description": "Body of the post"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "description": "Title of the post"
                    },
                    "body": {
                      "type": "string",
                      "description": "Body of the post"
                    },
                    "likes": {
                      "type": "array",
                      "format": "email"
                    },
                    "dislikes": {
                      "type": "array",
                      "format": "email"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "user": {
                      "type": "string",
                      "format": "email"
                    },
                    "id": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Post not found"
          },
          "400": {
            "description": "Invalid post id"
          },
          "403": {
            "description": "You are not authorized to edit this post"
          }
        }
      }
    },
    "/api/posts/delete": {
      "post": {
        "summary": "Delete post",
        "description": "Delete post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int64"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "deleted post id": {
                      "type": "integer",
                      "description": "Title of the post"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Post not found"
          },
          "400": {
            "description": "Invalid post id"
          },
          "403": {
            "description": "You are not authorized to delete this post"
          }
        }
      }
    },
    "/api/posts/like": {
      "post": {
        "summary": "Like post",
        "description": "Like post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int64"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "success"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Post not found"
          },
          "403": {
            "description": "You can't like your own post"
          },
          "400": {
            "description": "Invalid post id"
          }
        }
      }
    },
    "/api/posts/dislike": {
      "post": {
        "summary": "Dislike post",
        "description": "Dislike post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int64"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "success"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Post not found"
          },
          "403": {
            "description": "You can't dislike your own post"
          },
          "400": {
            "description": "Invalid post id"
          }
        }
      }
    },
    "/api/posts/get_all_your_actions": {
      "get": {
        "summary": "Get all your actions",
        "description": "Get all your actions from redis cache",
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "actions": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "action": {
                            "type": "string"
                          },
                          "email": {
                            "type": "string",
                            "format": "email"
                          },
                          "post_id": {
                            "type": "integer"
                          },
                          "time": {
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

